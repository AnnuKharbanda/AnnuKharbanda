import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from plotly.subplots import make_subplots
from datetime import datetime
covid_df=pd.read_csv("/content/covid_19_india.csv")
covid_df.head(10)
covid_df.info()
covid_df.describe()
vaccine_df=pd.read_csv("/content/covid_vaccine_statewise.csv")
vaccine_df.head(7)
covid_df.drop(["Sno","ConfirmedIndianNational","ConfirmedForeignNational"],inplace=True,axis=1)
covid_df.head()
covid_df['Active_cases']=covid_df['Confirmed']-(covid_df['Cured']+covid_df['Deaths'])
covid_df.tail(60)
statewise=pd.pivot_table(covid_df,values=["Confirmed","Deaths","Cured"],index="State/UnionTerritory",aggfunc=max)
statewise["Recovery Rate"]=statewise["Cured"]*100/statewise["Confirmed"]
statewise["Mortality Rate"]=statewise["Deaths"]*100/statewise["Confirmed"]
statewise=statewise.sort_values(by="Confirmed",ascending=False)
statewise.style.background_gradient(cmap="cubehelix")
#Top 10 active cases states
top_10_active_cases=covid_df.groupby(by="State/UnionTerritory").max()['Active_cases'].sort_values(ascending=False).reset_index()
fig=plt.figure(figsize=(16,9))
plt.title("Top 10 states with most active active cases in india",size=25)
ax=sns.barplot(data=top_10_active_cases.iloc[:10],y="Active_cases",x="State/UnionTerritory",linewidth=2,edgecolor="Red")
#Top 10 active cases states
top_10_active_cases=covid_df.groupby(by="State/UnionTerritory").max()['Active_cases'].sort_values(ascending=False).reset_index()
fig=plt.figure(figsize=(16,9))
plt.title("Top 10 states with most active active cases in india",size=25)
ax=sns.barplot(data=top_10_active_cases.iloc[:10],y="Active_cases",x="State/UnionTerritory",linewidth=2,edgecolor="Red")
plt.xlabel("States")
plt.ylabel("Total_Active_Cases")
plt.show()
# top states with highest deaths
top_10_deaths=covid_df.groupby("State/UnionTerritory").max()['Deaths'].sort_values(ascending=False).reset_index()
fig=plt.figure(figsize=(16,9))
plt.title("Top 10 states with most deaths in india",size=25)
ax=sns.barplot(data=top_10_deaths.iloc[:10],y="Deaths",x="State/UnionTerritory",linewidth=2,edgecolor="Black")
plt.xlabel("States")
plt.ylabel("Deaths")
plt.show()
# growth trend
fig=plt.figure(figsize=(12,6))
ax=sns.lineplot(data=covid_df[covid_df["State/UnionTerritory"].isin(['Maharashtra','Karnataka','Delhi','Tamil Nadu','Uttar Pradesh'])],x='Date',y='Active_cases',hue='State/UnionTerritory')
ax.set_title("Top 5 affected states in India",size=16)
vaccine_df.head()
vaccine_df.rename(columns={'Updated On':'Vaccine Date'},inplace=True)
vaccine_df.head()
vaccine_df.info()
vaccine_df.isnull().sum()
vaccination=vaccine_df.drop(columns=['Sputnik V (Doses Administered)','AEFI','18-44 Years (Doses Administered)','45-60 Years (Doses Administered)','60+ Years (Doses Administered)'],axis=1)
vaccination.head()
 male vs female vaccination
male=vaccination['Male(Individuals Vaccinated)'].sum()
female=vaccination['Female(Individuals Vaccinated)'].sum()
px.pie(names=['Male','Female'],values=[male,female],title="Male and Female Vaccination")
# remove rows where state is India
vaccine=vaccine_df[vaccine_df.State!='India']
vaccine

vaccine.rename(columns={"Total Individuals Vaccinated":"Total"},inplace=True)
vaccine.head()
# Most vaccinated state
max_vac=vaccine.groupby('State')['Total'].sum().to_frame('Total')
max_vac=max_vac.sort_values('Total',ascending=False)[:5]
max_vac
fig=plt.figure(figsize=(10,5))
plt.title("Top 5 vaccinated states in India",size=20)
x=sns.barplot(data=max_vac.iloc[:10],y=max_vac.Total,x=max_vac.index,linewidth=2,edgecolor='Black')
plt.xlabel("States")
plt.ylabel("Vaccination")
plt.show()
# Bottom 5 vaccinated states in India
least_vac=vaccine.groupby('State')['Total'].sum().to_frame('Total')
least_vac=least_vac.sort_values('Total',ascending=True)[:5]
least_vac
fig=plt.figure(figsize=(10,5))
plt.title("Least 5 vaccinated states in India",size=20)
x=sns.barplot(data=least_vac.iloc[:10],y=least_vac.Total,x=least_vac.index,linewidth=2,edgecolor='Black')
plt.xlabel("States")
plt.ylabel("Vaccination")
plt.show()
